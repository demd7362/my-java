package ch19.sec03.exam01;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

import org.json.JSONObject;

public class ChatClient {

	Socket socket; // 내 포트
	DataInputStream dis;
	DataOutputStream dos;
	String chatName; // 내 닉네임
	// 서버 연결

	public void connect() throws UnknownHostException, IOException {
		socket = new Socket("localhost", 7362); // 내 포트번호
		dis = new DataInputStream(socket.getInputStream()); // 채팅해야 하니까 소켓에서 읽기 구현
		dos = new DataOutputStream(socket.getOutputStream()); // 채팅해야 하니까 소켓에서 쓰기 구현
		System.out.println("[클라이언트] 서버에 연결됨");
	}
	public void unconnect() throws IOException {
		socket.close();
	}
	
	// json 받기
	public void receive() {
		Thread thread = new Thread(()-> {
			try {
				while(true) {
					String json = dis.readUTF(); // 서버가 보낸 메시지를 String으로 저장
					JSONObject root = new JSONObject(json); // json parsing
					// 인풋 메시지를 string -> json으로 파싱해서 정보 불러오기
					String clientIp = root.getString("clientIp");
					String chatName = root.getString("chatName");
					String message = root.getString("message");
					System.out.println("<"+chatName+"@"+clientIp+"> "+message);
				}
			} catch (Exception e) {
				System.out.println("[클라이언트] 서버 연결 끊김");
			}
		});
		thread.start();
	}
	
	public void send(String json) throws IOException {
		dos.writeUTF(json);
		dos.flush();
	}
	
	public static void main(String[] args) {
		try {
			ChatClient chatClient = new ChatClient();
			chatClient.connect();
			
			Scanner sc = new Scanner(System.in);
			System.out.println("대화명 입력");
			chatClient.chatName = sc.nextLine();
			
			JSONObject jsonObject = new JSONObject(); // json 객체 생성
			jsonObject.put("command", "incoming"); // key command value incoming
			jsonObject.put("data", chatClient.chatName); // key data value 내 닉네임
			String json = jsonObject.toString(); // json 정보 저장
			chatClient.send(json); // 서버로 json 보내기
		} catch (Exception e) {}
	}
}
